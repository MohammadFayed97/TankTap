// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TankTap.Invoices.Infrastructure;

#nullable disable

namespace TankTap.Invoices.Infrastructure.Migrations
{
    [DbContext(typeof(InvoicesContext))]
    partial class InvoicesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("invoices")
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TankTap.Invoices.Domain.ProductAggregate.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Products", "invoices");
                });

            modelBuilder.Entity("TankTap.Invoices.Domain.StationAggregate.Station", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stations", "invoices");
                });

            modelBuilder.Entity("TankTap.Invoices.Domain.ProductAggregate.Product", b =>
                {
                    b.OwnsOne("TankTap.SharedKernel.Domain.LocalizedName", "Name", b1 =>
                        {
                            b1.Property<int>("ProductId")
                                .HasColumnType("int");

                            b1.Property<string>("ArName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("ArName");

                            b1.Property<string>("BnName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("BnName");

                            b1.Property<string>("EnName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("EnName");

                            b1.Property<string>("UrName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("UrName");

                            b1.HasKey("ProductId");

                            b1.ToTable("Products", "invoices");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });

                    b.Navigation("Name")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
